{"version":3,"file":"assets/js/main.f318a0ef.js","mappings":"mBAAA,MAIA,EAJoB,IACP,iBAAkBA,QAAWC,UAAUC,eAAiB,GAAKD,UAAUE,iBAAmB,EC+BvG,EA9Bc,CAACC,EAAIC,GAAS,KACxB,MAAMC,EAAUF,EAAGG,OAAS,EAAI,IAAIC,SAASC,iBAAiBL,IAAOA,EAErE,SAASM,EAAYC,GAEZ,IAWI,KAAiBN,GACtBM,EAAKC,iBAAiB,SAAS,KACtBD,EAAKE,UAAUC,SAAS,SAGzBH,EAAKE,UAAUE,OAAO,SAFtBJ,EAAKE,UAAUG,IAAI,aAb3BL,EAAKC,iBAAiB,cAAc,KAC3BD,EAAKE,UAAUC,SAAS,UACzBH,EAAKE,UAAUG,IAAI,YAG3BL,EAAKC,iBAAiB,cAAc,KAChCD,EAAKE,UAAUE,OAAO,aAelCX,EAAGG,OAAS,EAAID,EAAQW,KAAKN,GAASD,EAAYC,KAASD,EAAYN,ICe3E,EA5Cc,KACV,MAAMc,EAAO,IAAIV,SAASC,iBAAiB,mBACvCU,EAAYX,SAASY,cAAc,mBACnCC,EAAeb,SAASY,cAAc,aACtCE,EAAQd,SAASY,cAAc,UAC/BG,EAAiBD,EAAMF,cAAc,eACrCI,EAAWF,EAAMF,cAAc,aACnC,IAAIK,EACAC,EAAU,GAcdP,EAAUP,iBAAiB,SAAS,SAAUe,GAC1C,MAAMC,EAAaD,EAAGE,OAAOC,QAAQ,SAASV,cAAc,eAC5DF,EAAKa,SAAS3B,IACNuB,EAAGE,SAAWzB,IACdsB,EAAU,GACVH,EAAeS,UAAYN,EAAQO,WAEnCX,EAAMY,MAAMC,MAAQP,EAAWQ,YAAc,KAC7Cf,EAAaR,UAAUG,IAAI,QAC3BM,EAAMF,cAAc,sBAAsBY,UAAYJ,EAAWI,UApBzEP,EAAQY,aAAY,KACZX,EAAU,GACVA,IACAH,EAAeS,UAAYN,IAE3BY,cAAcb,GACdJ,EAAaR,UAAUE,OAAO,WAEnC,YAkBPS,EAASZ,iBAAiB,SAAS,SAAUe,GACzCA,EAAGY,iBACHlB,EAAaR,UAAUE,OAAO,QAC9BuB,cAAcb,OCrCtBjB,SAASI,iBAAiB,oBAAoB,WAC1C,EAAM,aAAa,GACnB,Q","sources":["webpack://test-task/./src/js/components/touchDevice.js","webpack://test-task/./src/js/components/hover.js","webpack://test-task/./src/js/components/popup.js","webpack://test-task/./src/js/main.js"],"sourcesContent":["const touchDevice = () => {\r\n    return (('ontouchstart' in window) || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0);\r\n};\r\n\r\nexport default touchDevice;","import touchDevice from \"./touchDevice\";\r\n\r\nconst hover = (el, mobile = false) => {\r\n    const element = el.length > 1 ? [...document.querySelectorAll(el)] : el;\r\n\r\n    function toggleClass(item) {\r\n\r\n        if (!touchDevice()) {\r\n            item.addEventListener('mouseenter', () => {\r\n                if (!item.classList.contains('hover')) {\r\n                    item.classList.add('hover');\r\n                }\r\n            })\r\n            item.addEventListener('mouseleave', () => {\r\n                item.classList.remove('hover');\r\n            })\r\n        }\r\n\r\n        else if (touchDevice() && mobile) {\r\n            item.addEventListener('click', () => {\r\n                if (!item.classList.contains('hover')) {\r\n                    item.classList.add('hover');\r\n                } else {\r\n                    item.classList.remove('hover');\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    el.length > 1 ? element.map((item) => toggleClass(item)) : toggleClass(el)\r\n};\r\n\r\nexport default hover;","const popup = () => {\r\n    const btns = [...document.querySelectorAll('.js-button-buy')],\r\n        btnParent = document.querySelector('.js-btns-parent'),\r\n        modalWrapper = document.querySelector('.js-modal'),\r\n        modal = document.querySelector('.modal'),\r\n        counterElement = modal.querySelector('.js-counter'),\r\n        closeBtn = modal.querySelector('.js-close');\r\n    let timer,\r\n        counter = 30;\r\n\r\n    function initCounter() {\r\n        timer = setInterval(() => {\r\n            if (counter > 1) {\r\n                counter--;\r\n                counterElement.innerHTML = counter;\r\n            } else {\r\n                clearInterval(timer)\r\n                modalWrapper.classList.remove('open');\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    btnParent.addEventListener(\"click\", function (ev) {\r\n        const cardParent = ev.target.closest('.card').querySelector('.js-content');\r\n        btns.forEach((el) => {\r\n            if (ev.target === el) {\r\n                counter = 30;\r\n                counterElement.innerHTML = counter.toString();\r\n\r\n                modal.style.width = cardParent.offsetWidth + 'px';\r\n                modalWrapper.classList.add('open');\r\n                modal.querySelector('.js-content-update').innerHTML = cardParent.innerHTML;\r\n                initCounter();\r\n            }\r\n        })\r\n    });\r\n\r\n    closeBtn.addEventListener('click', function (ev) {\r\n        ev.preventDefault();\r\n        modalWrapper.classList.remove('open');\r\n        clearInterval(timer);\r\n    });\r\n}\r\n\r\nexport default popup;","import hover from \"./components/hover\";\r\nimport popup from \"./components/popup\";\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    hover('.js-hover', true);\r\n    popup()\r\n});"],"names":["window","navigator","maxTouchPoints","msMaxTouchPoints","el","mobile","element","length","document","querySelectorAll","toggleClass","item","addEventListener","classList","contains","remove","add","map","btns","btnParent","querySelector","modalWrapper","modal","counterElement","closeBtn","timer","counter","ev","cardParent","target","closest","forEach","innerHTML","toString","style","width","offsetWidth","setInterval","clearInterval","preventDefault"],"sourceRoot":""}